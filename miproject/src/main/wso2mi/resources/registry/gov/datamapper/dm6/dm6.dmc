// WARNING: This file has been auto-generated. Do not edit this file, as any changes will be overwritten.

function mapFunction(input) {
    return {
        dtos: [{
            type: input.MessageProperties.EventType,
            data: {
                MessageGuid: input.MessageProperties.MessageId,
                ParentMessageGuid: input.MessageProperties.AuditId,
                MessageContentType: input.MessageProperties.EventType,
                MessageContent: {
                    Distance: "",
                    State: "",
                    City: "",
                    Zip: "",
                    Odometer: floor(input.Content.Odometer),
                    IgnitionStatus: input.Content.IgnitionStatus,
                    Description: input.Content.Description,
                    Heading: input.Content.Heading,
                    Speed: input.Content.Speed,
                    StatusDate: input.Content.StatusDate,
                    HeaderInformation: input.Content.HeaderInformation,
                    Position: input.Content.Position
                }
            }
        }]
    };
}

// WARNING: Do not edit/remove below function
function map_S_root_S_root() {
    return mapFunction(inputroot);
}

/**
 * #### AUTO-GENERATED FUNCTION, DO NOT MODIFY ####
 * Finds the floor of a number.
 * * @param num - The number to find the floor of.
 * * @returns The floor of the number.
 */
function floor(num) {
    return Math.floor(num);
}
